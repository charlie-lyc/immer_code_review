// 나누어 떨어지는 숫자 배열

// 문제 설명
// array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.
// divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.

// 제한사항
// arr은 자연수를 담은 배열입니다.
// 정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.
// divisor는 자연수입니다.
// array는 길이 1 이상인 배열입니다.

// 입출력 예
// arr	           divisor	 return
// [5, 9, 7, 10]   5	     [5, 10]
// [2, 36, 1, 3]   1	     [1, 2, 3, 36]
// [3,2,6]	       10	     [-1]

// 입출력 예 설명
// 입출력 예#1
// arr의 원소 중 5로 나누어 떨어지는 원소는 5와 10입니다. 따라서 [5, 10]을 리턴합니다.
// 입출력 예#2
// arr의 모든 원소는 1으로 나누어 떨어집니다. 원소를 오름차순으로 정렬해 [1, 2, 3, 36]을 리턴합니다.
// 입출력 예#3
// 3, 2, 6은 10으로 나누어 떨어지지 않습니다. 나누어 떨어지는 원소가 없으므로 [-1]을 리턴합니다.

function solution(arr, divisor) {
    var answer = [];
    // 주어진 배열 arr을 순회하면서 divisor로 나누었을 때 나머지가 0인 요소만 결과 배열에 담기
    // 결과 배열에 아무것도 담기지 않았을 때는 -1을 담아 반환
    // 그외의 경우에는 결과 배열을 오름차순 정렬하여 반환
    answer = arr.filter(ele => {
       return ele % divisor === 0; 
    });
    if (answer.length === 0) answer.push(-1);
    else answer.sort((a, b) => a - b);
    return answer;
}
